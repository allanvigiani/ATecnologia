generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Companies {
  id         Int               @id @default(autoincrement())
  email      String            @unique
  name       String?
  password   String
  address    String?           @db.VarChar(250)
  created_at DateTime          @default(now())
  updated_at DateTime?
  sessions   CompanySessions[]
  services   Services[]

  @@map("company")
}

model CompanySessions {
  id          Int       @id @default(autoincrement())
  start_login DateTime  @default(now())
  end_login   DateTime?
  company_id  Int
  company     Companies @relation(fields: [company_id], references: [id])

  @@map("company_sessions")
}

model Services {
  id                Int            @id @default(autoincrement())
  name              String
  professional_name String?
  price             Float
  company_id        Int
  company           Companies      @relation(fields: [company_id], references: [id])
  Schedules         Schedules[]
  ServiceHours      ServiceHours[]

  @@map("services")
}

model Status {
  id        Int         @id @default(autoincrement())
  name      String
  Schedules Schedules[]

  @@map("status")
}

model ServiceHours {
  id         Int         @id @default(autoincrement())
  start_time DateTime
  end_time   DateTime
  service_id Int
  service    Services    @relation(fields: [service_id], references: [id])
  Schedules  Schedules[]

  @@map("service_hours")
}

model Schedules {
  id              Int          @id @default(autoincrement())
  service_id      Int
  services        Services     @relation(fields: [service_id], references: [id])
  service_hour_id Int
  service_hour    ServiceHours @relation(fields: [service_hour_id], references: [id])
  created_at      DateTime     @default(now())
  client_name     String
  client_contact  String?
  client_email    String
  status_id       Int
  status          Status       @relation(fields: [status_id], references: [id])

  @@map("shedule")
}
